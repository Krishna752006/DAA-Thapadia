1. What is the output of the following C++ code?

int a = 10;
int b = 20;
int c = 30;
int d = (a * b) / c;
cout << d;
A) 6
B) 7
C) 10
D) 20
Answer: A

2. What is the output of the following code?

#include<iostream>
using namespace std;

void func(int a, int b = 10, int c = 20) {
    cout << a + b + c << endl;
}

int main() {
    func(5);
    func(5, 15);
    func(5, 15, 25);
    return 0;
}
A) 35, 40, 45
B) 35, 30, 45
C) 35, 30, 40
D) 30, 35, 45
Answer: A

3. Which of the following operations is more efficient on a doubly linked list than on a singly linked list?

A) Traversal
B) Insertion at the head
C) Insertion at the tail
D) Deletion of a node given its pointer
Answer: D

4. Which of the following is NOT a real-time application of a linked list?

A) Browser history management
B) Undo functionality in text editors
C) Memory management in operating systems
D) Sorting of a large array
Answer: D

5. Predict the output of the following code:

#include<iostream>
using namespace std;

int sum(int arr[], int n) {
    if (n == 0) return 0;
    return arr[n-1] + sum(arr, n-1);
}

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    cout << sum(arr, 5);
    return 0;
}
A) 15
B) 10
C) 20
D) 25
Answer: A

6. In a doubly linked list, how many pointers need to be updated when inserting a new node between two existing nodes?

A) 1
B) 2
C) 3
D) 4
Answer: D

7. Which of the following real-time applications can be implemented using a queue?

A) Undo functionality
B) Task scheduling in operating systems
C) Directory traversal
D) All of these
Answer: B

8. In a circular queue, what condition indicates that the queue is full?

A) front == rear
B) front == rear + 1
C) rear == front + 1
D) (rear + 1) % size == front
Answer: D

9. In the context of queue implementation using arrays, what happens when a new element is enqueued into a circular queue that is already full?

A) The queue resizes automatically.
B) The oldest element is overwritten.
C) An error or overflow occurs.
D) The operation is ignored.
Answer: C

10. In a max heap, the maximum element is always found at which position?

A) The root node
B) The leftmost leaf node
C) The rightmost leaf node
D) The node with the maximum depth
Answer: A

11. What will be the output of the following C++ code?

#include<iostream>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
};

Node* newNode(int data) {
    Node* node = new Node();
    node->data = data;
    node->left = node->right = nullptr;
    return node;
}

void inorderTraversal(Node* root) {
    if (root == nullptr) return;
    inorderTraversal(root->left);
    cout << root->data << " ";
    inorderTraversal(root->right);
}

int main() {
    Node* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);

    inorderTraversal(root);
    return 0;
}
A) 1 2 3 4 5
B) 4 2 5 1 3
C) 4 5 2 3 1
D) 3 1 5 2 4
Answer: B

12. Predict the output of the following code:

#include<iostream>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
};

Node* newNode(int data) {
    Node* node = new Node();
    node->data = data;
    node->left = node->right = nullptr;
    return node;
}

void preorderTraversal(Node* root) {
    if (root == nullptr) return;
    cout << root->data << " ";
    preorderTraversal(root->left);
    preorderTraversal(root->right);
}

int main() {
    Node* root = newNode(10);
    root->left = newNode(20);
    root->right = newNode(30);
    root->left->left = newNode(40);
    root->left->right = newNode(50);

    preorderTraversal(root);
    return 0;
}
A) 10 20 40 50 30
B) 40 20 50 10 30
C) 10 30 20 50 40
D) 10 20 30 40 50
Answer: A

13. What will be the output of the following Java code?

class Base {
    int num = 100;
    public void display() {
        System.out.println("Base display");
    }
}

class Derived extends Base {
    int num = 200;
    public void display() {
        System.out.println("Derived display");
    }
}

public class Main {
    public static void main(String args[]) {
        Base obj = new Derived();
        System.out.println(obj.num);
        obj.display();
    }
}
A) 100, Base display
B) 200, Derived display
C) 100, Derived display
D) 200, Base display
Answer: C

14. What is the output of the following Java code?

class Parent {
    public static void display() {
        System.out.println("Parent Display");
    }
}

class Child extends Parent {
    public static void display() {
        System.out.println("Child Display");
    }
}

public class Main {
    public static void main(String[] args) {
        Parent p = new Child();
        p.display();
    }
}
A) Parent Display
B) Child Display
C) Compilation Error
D) Runtime Error
Answer: A

15. What is the output of the following Java code involving threads?

class MyThread extends Thread {
    public void run() {
        System.out.println("Thread Running");
    }
}

public class Main {
    public static void main(String[] args) {
        MyThread t1 = new MyThread();
        t1.run();
        t1.start();
    }
}
A) Thread Running
B) Thread Running, Thread Running
C) Thread Running, Compilation Error
D) Runtime Exception
Answer: B

16. What is the output of the following Java code?

public class Main {
    public static void main(String[] args) {
        try {
            int a = 5 / 0;
        } finally {
            System.out.println("Finally block executed");
        }
    }
}
A) Exception in thread "main" java.lang.ArithmeticException: / by zero
B) Finally block executed
C) Finally block executed, Exception in thread "main" java.lang.ArithmeticException: / by zero
D) Compilation Error
Answer: C

